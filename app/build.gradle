/**
 *  Paintroid: An image manipulation application for Android.
 *  Copyright (C) 2010-2015 The Catrobat Team
 *  (<http://developer.catrobat.org/credits>)
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as
 *  published by the Free Software Foundation, either version 3 of the
 *  License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 *  GNU Affero General Public License for more details.
 *
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

if (!project.hasProperty("signingKeystore")) {
    ext.signingKeystore = "dummyKeystore"
}

android {
    compileSdkVersion rootProject.ext.androidCompileSdkVersion
    defaultConfig {
        applicationId "org.catrobat.paintroid"
        minSdkVersion rootProject.ext.androidMinSdkVersion
        //noinspection OldTargetApi
        targetSdkVersion rootProject.ext.androidTargetSdkVersion
        versionCode rootProject.ext.androidVersionCode
        versionName rootProject.ext.androidVersionName
    }

    signingConfigs {
        signedRelease {
            // credentials loaded in release_task.gradle
            storeFile file(project["signingKeystore"])
            storePassword ""
            keyAlias ""
            keyPassword ""
        }
    }

    if (project.hasProperty("signingKeystore") && project.hasProperty("signingKeystorePassword") &&
            project.hasProperty("signingKeyAlias") && project.hasProperty("signingKeyPassword")) {
        android.signingConfigs.signedRelease.storePassword = project.getProperties().get("signingKeystorePassword")
        android.signingConfigs.signedRelease.keyAlias = project.getProperties().get("signingKeyAlias")
        android.signingConfigs.signedRelease.keyPassword = project.getProperties().get("signingKeyPassword")
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        signedRelease.initWith(buildTypes.release)
        signedRelease {
            signingConfig signingConfigs.signedRelease
        }
    }
}

dependencies {
    implementation project(':Paintroid')
}
